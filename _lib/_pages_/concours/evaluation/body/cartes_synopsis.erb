<%
# frozen_string_literal: true



# POUR ESSAI À SUPPRIMER TODO

Synopsis.evaluate_all_synopsis(phase: 1, evaluator: html.evaluator)
message("Synopsis évalués et classés")

=begin

  Section à deux offices :
    1) montrer la liste des cartes de synopsis (chaque concurrent en possède
       une, même s'il n'a pas encore envoyé son synopsis)
    2) hors temps du concours, c'est l'accueil des évaluateurs, avec un
       affichage minimal.

=end
phase = Concours.current.phase
annee = Concours.current.annee
CONCOURS_ON = [1,2,3,5,8].include?(phase)

if CONCOURS_ON
  self.titre = "Cartes des synopsis"
else
  self.titre = "Accueil du jury du concours"
end
%>

<%# Pour choisir l'évaluateur %>
<script type="text/javascript">
const EVALUATOR_ID = <%= evaluator.id %>;
</script>


<% if not CONCOURS_ON %>
<%
# ---------------------------------------------------------------------
#
#   LE CONCOURS N'EST PAS ENCORE LANCÉ
#
# ---------------------------------------------------------------------
%>

<p class="big border">Lorsque le concours sera lancé, vous trouverez ici la liste des projets à évaluer.</p>

<% else %>

<%
# ---------------------------------------------------------------------
#
#   LE CONCOURS EST LANCÉ
#
# ---------------------------------------------------------------------
%>

<%
# Le formulaire pour entrer un numéro de fichier, afin de pouvoir l'évaluer
formsynoeval = Form.new(id:"goto-evaluate-synopsis-form", route:"concours/evaluation", class:"inline nolibelle mb2")
formsynoeval.rows = {
  "<view/>" => {type:"hidden", name:"view", value:"checklist"},
  "Fichier (i.e. ID Synopsis)" => {name:"synoid", type:"text", style:"width:300px;", placeholder:"ID du synopsis à évaluer"}
}
formsynoeval.submit_button = "Évaluer"
formsynoeval.submit_button_class = "inline small"
%>
<div class="right nolimit">
  <%= formsynoeval.out %>
</div>


<%
# Options pour les choix des synopsis à afficher
# Pour un administrateur, on affiche toujours tous les synopsis.
options_sorting = {} if user.admin?
options_sorting ||= case phase
                  when 1
                    # En phase 1 (concours lancé) aucune option particulière,
                    # on doit prendre tous les synopsis courant
                    {}
                  when 2
                    # En phase 2 (échéance arrivée), on ne travaille plus
                    # qu'avec les fichiers concormes.
                    {avec_fichier_conforme: true}
                  when 3
                    # En phase 3 (présélection effectuée), on ne travaille
                    # plus qu'avec les fichiers présélectionnés.
                    {preselecteds: true}
                  else
                    # À la demande ?
                    {}
                  end
 %>
<%= sorting_tools(param(:ks), param(:ss)) %>
<div id="synopsis-container" class="nolimit">
  <% fiches_synopsis = Synopsis.sorted_by(param(:ks),param(:ss), options_sorting) %>
  <% if fiches_synopsis.count > 0 %>
    <% fiches_synopsis.each do |syno| %>
      <%= syno.out(evaluator.id) %>
    <% end %>
  <% else %>
    <p>Il n'y a pas encore d’inscrit au concours <%= annee %>.</p>
  <% end %>
</div>


<%
end # si le concours est lancé
%>
